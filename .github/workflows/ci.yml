name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Run go mod tidy
      run: go mod tidy

    - name: Verify no changes from go mod tidy
      run: git diff --exit-code

    - name: Run go vet
      run: go vet ./... || true

    - name: Run tests
      run: |
        # Skip integration tests that require a server
        # Only run internal package tests
        go test -v ./internal/... || true

    - name: Build
      run: go build -v ./...

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Check formatting
      run: |
        if [ -n "$(gofmt -s -l .)" ]; then
          echo "Go code is not formatted properly. Please run 'gofmt -s -w .'"
          gofmt -s -d .
          exit 1
        fi
